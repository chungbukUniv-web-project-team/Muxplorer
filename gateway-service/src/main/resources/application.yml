eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://220.125.53.144:8761/eureka
server:
  port: 8000
spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      globalcors:
        add-to-simple-url-handler-mapping: true
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowCredentials: true
            allowedHeaders:
              - x-requested-with
              - authorization
              - content-type
              - credential
              - X-AUTH-TOKEN
              - X-CSRF-TOKEN
            allowedMethods:
              - POST
              - GET
              - PUT
              - PATCH
              - DELETE
              - OPTIONS
      routes:

        # 로그인/회원기입 h2-console 사용 설정
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/h2-console/**
        # 회원가입 루트
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/signup
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        # 로그아웃 루트
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/logout
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        # 리프레시 토큰발급
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/refresh
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
       # 로그인 루트
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/api/login
            - Method=POST
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        # 리뷰 서비스 - 리뷰 등록
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/review-service/api/send/review
            - Method=POST
          filters:
            - RewritePath=/review-service/(?<segment>.*), /$\{segment}
            - MyAuthorizationFilter
        # 리뷰 서비스 - 리뷰 삭제
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/review-service/api/delete/review/**
            - Method=DELETE
          filters:
            - RewritePath=/review-service/(?<segment>.*), /$\{segment}
            - MyAuthorizationFilter

        #      # Admin만 접근 가능한 페이지
#        - id: user-service
#          uri: lb://USER-SERVICE
#          predicates:
#            - Path=/user-service/admin/**
#            - Method=GET,POST
#          filters:
#            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
#            - OnlyAdminFilter=true
      # 나머지 경로(인증 필요)
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET,POST,DELETE,OPTIONS
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - MyAuthorizationFilter
        - id: crawling-service
          uri: lb://CRAWLING-SERVICE
          predicates:
            - Path=/crawling-service/**
            - Method=GET,POST,DELETE,OPTIONS
          filters:
            - RewritePath=/crawling-service/(?<segment>.*), /$\{segment}
            - MyAuthorizationFilter
        - id: suggestion-service
          uri: lb://SUGGESTION-SERVICE
          predicates:
            - Path=/suggestion-service/find/room
            - Method=GET
          filters:
            - RewritePath=/suggestion-service/(?<segment>.*), /$\{segment}
            - OnlyAdminFilter
        - id: suggestion-service
          uri: lb://SUGGESTION-SERVICE
          predicates:
            - Path=/suggestion-service/get/proposal/**
            - Method=GET
          filters:
            - RewritePath=/suggestion-service/(?<segment>.*), /$\{segment}
            - OnlyAdminFilter
        - id: suggestion-service
          uri: lb://SUGGESTION-SERVICE
          predicates:
            - Path=/suggestion-service/delete/proposal/**
            - Method=GET
          filters:
            - RewritePath=/suggestion-service/(?<segment>.*), /$\{segment}
            - OnlyAdminFilter
        - id: suggestion-service
          uri: lb://SUGGESTION-SERVICE
          predicates:
            - Path=/suggestion-service/**
            - Method=GET,POST,DELETE,OPTIONS
          filters:
            - RewritePath=/suggestion-service/(?<segment>.*), /$\{segment}
        # 리뷰 서비스 (나머지 기능)
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/review-service/api/**
            - Method=GET,POST,DELETE,OPTIONS
          filters:
            - RewritePath=/review-service/(?<segment>.*), /$\{segment}

token:
  secret : amFuZ2phbmdqYW5namFuZ2phbmdqYW5namFuZ2phbmc=